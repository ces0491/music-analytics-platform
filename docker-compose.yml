# docker-compose.yml
version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=sqlite:///data/music_analytics.db
      - API_SECRET_KEY=your-secret-key-change-in-production
    volumes:
      - ./data:/app/data
      - ./reports:/app/reports
      - ./backend/templates:/app/templates
    depends_on:
      - db
    restart: unless-stopped

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api/v1
    depends_on:
      - backend
    restart: unless-stopped

  # SQLite Database (using volume for persistence)
  db:
    image: alpine:latest
    command: sh -c "mkdir -p /db && touch /db/music_analytics.db && tail -f /dev/null"
    volumes:
      - db_data:/db
    restart: unless-stopped

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    profiles:
      - production

  # Data Processor Service (Optional - for batch processing)
  processor:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
    command: python -m services.data_processor
    environment:
      - DATABASE_URL=sqlite:///data/music_analytics.db
    volumes:
      - ./data:/app/data
      - ./raw_data:/app/raw_data
    depends_on:
      - db
    restart: "no"
    profiles:
      - processing

volumes:
  db_data:
    driver: local

networks:
  default:
    name: music-analytics-network